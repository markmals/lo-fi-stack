@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
    --max-width: calc(100% - 1rem);
}

@media (min-width: 50em) {
    :root {
        --max-width: 46em;
    }
}

@layer components {
    .markdown {
        & a {
            @apply items-center gap-2 font-normal text-teal-500 underline underline-offset-[0.08em] 
            visited:text-teal-600 dark:text-teal-400 dark:visited:text-teal-500;
        }

        & p,
        ul,
        ol {
            @apply leading-7 text-gray-600 dark:text-gray-300/80;
        }

        & h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
            @apply mb-4 font-montserrat font-bold leading-[1] text-[#2e3837] dark:text-gray-200;
        }

        & h1 {
            @apply text-6xl font-extrabold text-[#2e3838] dark:text-teal-100/80;
        }

        & h2 {
            @apply text-4xl;
        }

        & h3 {
            @apply text-2xl;
        }

        & :is(h2, h3):not(:first-child) {
            @apply mt-12;
        }

        & article > section :is(ul, ol) {
            @apply pl-4;
        }

        & article > section :is(ul, ol) > * + * {
            @apply mt-3;
        }

        & article > section nav :is(ul, ol) > * + * {
            @apply mt-[inherit];
        }

        & article > section li > :is(p, pre, blockquote):not(:first-child) {
            @apply mt-4;
        }

        & article > section :is(ul, ol) {
            @apply pl-4;
        }

        & article > section nav :is(ul, ol) {
            @apply pl-[inherit];
        }

        & ul {
            @apply mx-4 my-2 block list-disc leading-6; /* text-sm */
        }

        & ol {
            @apply my-4 ml-12 mr-4 block list-decimal leading-6; /* text-sm */
        }

        & li li {
            @apply ml-5;
        }

        & .task-list-item li {
            @apply ml-10;
        }

        & .task-list-item {
            @apply list-none;
            /* @apply flex flex-row flex-wrap items-center gap-2; */
        }

        & :is(ul, ol) > * + * {
            @apply mt-3;
        }

        & pre {
            @apply relative my-4 overflow-x-auto overflow-y-hidden rounded-lg border border-slate-200 px-6 py-4 font-mono text-[0.85rem] leading-6 dark:border-zinc-950;
            background-color: #f8fafcb4 !important;
        }

        @media (prefers-color-scheme: dark) {
            & pre {
                background-color: #27272a4f !important;
            }
        }

        & code:not(pre > code) {
            @apply rounded bg-gray-100 px-1 py-0.5 dark:bg-zinc-800;
        }

        & p code,
        li code {
            @apply text-sm;
        }

        & input[type="checkbox"] {
            @apply h-4 w-4 rounded text-teal-600 focus:ring-teal-600 dark:bg-zinc-800;
        }

        & input:not([checked]) {
            @apply border-gray-300 dark:border-zinc-950;
        }

        & :is(p, pre, blockquote):not(:first-child) {
            @apply mt-4;
        }
    }

    .alert a {
        color: theme("colors.yellow.700") !important;
    }

    @media (prefers-color-scheme: dark) {
        .alert a {
            color: theme("colors.yellow.600") !important;
        }
    }

    .alert p {
        font-size: 0.875rem;
        line-height: 1.25rem !important;
        color: theme("colors.yellow.900");

        /* &::selection {
            @apply bg-yellow-100 text-yellow-600;
        } */
    }

    @media (prefers-color-scheme: dark) {
        .alert p {
            color: theme("colors.yellow.500");
        }
    }

    h2.heading {
        font-size: 1rem;
        font-weight: 700;
        padding: 0.1rem 1rem;
        text-transform: uppercase;
        margin-bottom: 0.5rem;

        @apply font-montserrat;
    }

    .header-link {
        font-size: 1em;
        transition: border-inline-start-color 100ms ease-out, background-color 200ms ease-out;
        border-left: 4px solid var(--theme-divider);
    }

    .header-link a {
        display: inline-flex;
        gap: 0.5em;
        width: 100%;
        font: inherit;
        padding: 0.4rem 0;
        line-height: 1.3;
        color: inherit;
        text-decoration: none;
        unicode-bidi: plaintext;
    }

    @media (min-width: 50em) {
        .header-link a {
            padding: 0.275rem 0;
        }
    }

    .header-link:hover,
    .header-link:focus,
    .header-link:focus-within {
        border-inline-start-color: var(--theme-accent-secondary);
    }

    .header-link:hover a,
    .header-link a:focus {
        color: var(--theme-text);
        text-decoration: underline;
    }
    .header-link svg {
        opacity: 0.6;
    }
    .header-link:hover svg {
        opacity: 0.8;
    }

    /* Add line and padding on the left side */
    .header-link {
        padding-inline-start: 1rem;
    }
    .header-link.depth-3 {
        padding-inline-start: 2rem;
    }
    .header-link.depth-4 {
        padding-inline-start: 3rem;
    }

    .current-header-link {
        background-color: var(--theme-bg-accent);
        /* Indicates the current heading for forced colors users in older browsers */
        outline: 1px solid transparent;
    }

    @media (forced-colors: active) {
        .current-header-link {
            border: 1px solid CanvasText;
        }
    }

    .current-header-link a {
        color: var(--theme-text);
    }
}

@layer base {
    ::selection {
        @apply bg-teal-100 text-teal-600;
    }

    /* pre ::selection {
        @apply bg-teal-600 text-teal-100;
    } */

    main > * {
        width: 100%;
        height: 100%;
    }

    @media (prefers-color-scheme: dark) {
        pre[data-theme="light"],
        code[data-theme="light"] {
            display: none;
        }
    }

    @media (prefers-color-scheme: light), (prefers-color-scheme: no-preference) {
        pre[data-theme="dark"],
        code[data-theme="dark"] {
            display: none;
        }
    }
}
